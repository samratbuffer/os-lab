#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

// Thread function to print a message
void* printMessage(void* arg) {
    int* thread_id = (int*) arg;
    printf("Hello from thread %d\n", *thread_id);
    return NULL;
}

int main() {
    int n, i;

    printf("Enter the number of threads: ");
    scanf("%d", &n);

    pthread_t threads[n];  // Array to store thread IDs
    int thread_ids[n];      // Array to store thread numbers for each thread

    // Create threads
    for (i = 0; i < n; i++) {
        thread_ids[i] = i + 1;  // Assign thread numbers starting from 1
        if (pthread_create(&threads[i], NULL, printMessage, &thread_ids[i]) != 0) {
            perror("Failed to create thread");
            return 1;
        }
    }

    // Wait for all threads to finish
    for (i = 0; i < n; i++) {
        if (pthread_join(threads[i], NULL) != 0) {
            perror("Failed to join thread");
            return 1;
        }
    }

    printf("All threads completed.\n");

    return 0;
}

