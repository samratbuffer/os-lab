#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
void createDaemon() {
 pid_t pid;
 // Fork the first time
 pid = fork();
 if (pid < 0) {
 perror("Fork failed");
 exit(1);
 }
 if (pid > 0) {
 // Parent process exits
 exit(0);
 }
 // Child process becomes the session leader
 if (setsid() < 0) {
 perror("setsid failed");
 exit(1);
 }
 // Fork again to ensure the daemon is not a session leader
 pid = fork();
if (pid < 0) {
 perror("Fork failed");
 exit(1);
 }
 if (pid > 0) {
 // Parent exits again
 exit(0);
 }
 // Redirect standard I/O to /dev/null
 int fd = open("/dev/null", O_RDWR);
 dup2(fd, STDIN_FILENO);
 dup2(fd, STDOUT_FILENO);
 dup2(fd, STDERR_FILENO);
 // Change the current working directory to root
 chdir("/");
// Daemon process loop
 while (1) {
 sleep(60); // Daemon does its job periodically
 }
}
int main() {
 createDaemon();
 return 0;
}
